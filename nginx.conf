events {
    worker_connections 1024;
}

http {
    upstream backend {
        server pat-server:3000;
    }

    server {
        listen 80;
        server_name pat.timothyw.dev;

        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        location / {
            # Only redirect if the original request to Cloudflare was HTTP
            if ($http_x_forwarded_proto = "http") {
                return 301 https://$host$request_uri;
            }

            # Forward to backend
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

#     server {
#         listen 80;
#         server_name pat.timothyw.dev;
#
#         location /.well-known/acme-challenge/ {
#             root /var/www/html;
#         }
#
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
#
#     server {
#         listen 443 ssl;
#         server_name pat.timothyw.dev;
#
#         ssl_certificate /etc/letsencrypt/live/pat.timothyw.dev/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/pat.timothyw.dev/privkey.pem;
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers HIGH:!aNULL:!MD5;
#
#         include /etc/nginx/mime.types;
#         default_type application/octet-stream;
#
#         location / {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
}