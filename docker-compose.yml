services:
  nginx:
    image: nginx:alpine
    container_name: pat-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - pat-network
    depends_on:
      - pat-server
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf

  pat-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: kyrokrypt/pat-server:latest
    container_name: pat-server
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - NODE_ENV=production
    networks:
      - pat-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: pat-mongodb
    restart: unless-stopped
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - pat-network

configs:
  nginx_config:
    content: |
      events {
          worker_connections 1024;
      }

      http {
          upstream backend {
              server pat-server:3000;
          }

          # Redirect HTTP to HTTPS
          server {
              listen 80;
              server_name pat.timothyw.dev;
              return 301 https://$host$request_uri;
          }

          # HTTPS server
          server {
              listen 443 ssl;
              server_name pat.timothyw.dev;

              # SSL configuration
              ssl_certificate /etc/letsencrypt/live/pat.timothyw.dev/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/pat.timothyw.dev/privkey.pem;
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;

              # Required for proper MIME type handling
              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              location / {
                  proxy_pass http://backend;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
              }
          }
      }

networks:
  pat-network:
    name: pat-network
    driver: bridge

volumes:
  mongodb_data:
    name: pat-mongodb-data
  mongodb_config:
    name: pat-mongodb-config