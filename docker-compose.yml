services:
  nginx:
    image: nginx:alpine
    container_name: pat-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - webroot:/var/www/html
    networks:
      - pat-network
    depends_on:
      - pat-server

  certbot:
    image: certbot/certbot
    container_name: pat-certbot
    restart: unless-stopped
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - webroot:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path=/var/www/html; sleep 12h & wait $${!}; done;'"

  pat-server:
    image: kyrokrypt/pat-server:latest
    container_name: pat-server
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - API_URL=${API_URL}
      - REDIS_PASSWORD=${REDIS_PASS}
      - NODE_ENV=production
    networks:
      - pat-network
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:latest
    container_name: pat-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - pat-network

  redis:
    image: redis:alpine
    container_name: pat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    volumes:
      - redis_data:/data
    networks:
      - pat-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASS}

networks:
  pat-network:
    name: pat-network
    driver: bridge

volumes:
  mongodb_data:
    name: pat-mongodb-data
  mongodb_config:
    name: pat-mongodb-config
  redis_data:
    name: pat-redis-data
  webroot: