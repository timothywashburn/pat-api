name: Deploy PaT Server
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: kyrokrypt/pat-server

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Create .env file
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
          echo "DISCORD_CLIENT_ID=${{ secrets.DISCORD_CLIENT_ID }}" >> .env
          echo "DISCORD_GUILD_ID=${{ secrets.DISCORD_GUILD_ID }}" >> .env

      - name: Create remote directory and copy files
        env:
          SSH_CONNECTION: ${{ secrets.SSH_CONNECTION }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_CONNECTION "mkdir -p ~/pat-server"
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no docker-compose.yml $SSH_CONNECTION:~/pat-server/
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no .env $SSH_CONNECTION:~/pat-server/

      - name: Deploy to VPS
        env:
          SSH_CONNECTION: ${{ secrets.SSH_CONNECTION }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_CONNECTION "cd ~/pat-server && \
          docker compose pull pat-server && \
          docker compose up -d --force-recreate pat-server && \
          docker image prune -f"